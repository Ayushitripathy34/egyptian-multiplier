$date
	Fri Sep 13 11:56:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_dsdsddsdd $end
$var wire 32 ! d [31:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$scope module uut $end
$var wire 16 $ a [15:0] $end
$var wire 16 % b [15:0] $end
$var reg 32 & d [31:0] $end
$scope begin AND_gates[0] $end
$var parameter 2 ' i $end
$upscope $end
$scope begin AND_gates[1] $end
$var parameter 2 ( i $end
$upscope $end
$scope begin AND_gates[2] $end
$var parameter 3 ) i $end
$upscope $end
$scope begin AND_gates[3] $end
$var parameter 3 * i $end
$upscope $end
$scope begin AND_gates[4] $end
$var parameter 4 + i $end
$upscope $end
$scope begin AND_gates[5] $end
$var parameter 4 , i $end
$upscope $end
$scope begin AND_gates[6] $end
$var parameter 4 - i $end
$upscope $end
$scope begin AND_gates[7] $end
$var parameter 4 . i $end
$upscope $end
$scope begin AND_gates[8] $end
$var parameter 5 / i $end
$upscope $end
$scope begin AND_gates[9] $end
$var parameter 5 0 i $end
$upscope $end
$scope begin AND_gates[10] $end
$var parameter 5 1 i $end
$upscope $end
$scope begin AND_gates[11] $end
$var parameter 5 2 i $end
$upscope $end
$scope begin AND_gates[12] $end
$var parameter 5 3 i $end
$upscope $end
$scope begin AND_gates[13] $end
$var parameter 5 4 i $end
$upscope $end
$scope begin AND_gates[14] $end
$var parameter 5 5 i $end
$upscope $end
$scope begin AND_gates[15] $end
$var parameter 5 6 i $end
$upscope $end
$scope begin shift_add[1] $end
$var parameter 2 7 i $end
$upscope $end
$scope begin shift_add[2] $end
$var parameter 3 8 i $end
$upscope $end
$scope begin shift_add[3] $end
$var parameter 3 9 i $end
$upscope $end
$scope begin shift_add[4] $end
$var parameter 4 : i $end
$upscope $end
$scope begin shift_add[5] $end
$var parameter 4 ; i $end
$upscope $end
$scope begin shift_add[6] $end
$var parameter 4 < i $end
$upscope $end
$scope begin shift_add[7] $end
$var parameter 4 = i $end
$upscope $end
$scope begin shift_add[8] $end
$var parameter 5 > i $end
$upscope $end
$scope begin shift_add[9] $end
$var parameter 5 ? i $end
$upscope $end
$scope begin shift_add[10] $end
$var parameter 5 @ i $end
$upscope $end
$scope begin shift_add[11] $end
$var parameter 5 A i $end
$upscope $end
$scope begin shift_add[12] $end
$var parameter 5 B i $end
$upscope $end
$scope begin shift_add[13] $end
$var parameter 5 C i $end
$upscope $end
$scope begin shift_add[14] $end
$var parameter 5 D i $end
$upscope $end
$scope begin shift_add[15] $end
$var parameter 5 E i $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 E
b1110 D
b1101 C
b1100 B
b1011 A
b1010 @
b1001 ?
b1000 >
b111 =
b110 <
b101 ;
b100 :
b11 9
b10 8
b1 7
b1111 6
b1110 5
b1101 4
b1100 3
b1011 2
b1010 1
b1001 0
b1000 /
b111 .
b110 -
b101 ,
b100 +
b11 *
b10 )
b1 (
b0 '
$end
#0
$dumpvars
b110 &
b10 %
b11 $
b10 #
b11 "
b110 !
$end
#10
b110010 !
b110010 &
b101 #
b101 %
b1010 "
b1010 $
#20
b1111111000000001 !
b1111111000000001 &
b11111111 #
b11111111 %
b11111111 "
b11111111 $
#30
b1111111111111111 !
b1111111111111111 &
b1 #
b1 %
b1111111111111111 "
b1111111111111111 $
#40
b0 !
b0 &
b1100100 #
b1100100 %
b0 "
b0 $
#50
b100100100111110000 !
b100100100111110000 &
b100101100 #
b100101100 %
b111110100 "
b111110100 $
